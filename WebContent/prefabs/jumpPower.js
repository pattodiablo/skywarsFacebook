
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * jumpPower
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function jumpPower(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'powerUps', aFrame == undefined || aFrame == null? 'jumpPower instance 10014' : aFrame);
	this.anchor.set(0.5, 0.7);
	var _anim_power = this.animations.add('power', ['jumpPower instance 10000', 'jumpPower instance 10001', 'jumpPower instance 10002', 'jumpPower instance 10003', 'jumpPower instance 10004', 'jumpPower instance 10005', 'jumpPower instance 10006', 'jumpPower instance 10007', 'jumpPower instance 10008', 'jumpPower instance 10009', 'jumpPower instance 10010', 'jumpPower instance 10011', 'jumpPower instance 10012', 'jumpPower instance 10013', 'jumpPower instance 10014'], 15, true);
	_anim_power.play();
	
}

/** @type Phaser.Sprite */
var jumpPower_proto = Object.create(Phaser.Sprite.prototype);
jumpPower.prototype = jumpPower_proto;
jumpPower.prototype.constructor = jumpPower;

/* --- end generated code --- */
// -- user code here --
jumpPower.prototype.update = function() {
	this.x = this.game.state.getCurrentState﻿().fPlayer.x;
	this.y = this.game.state.getCurrentState﻿().fPlayer.y;
};