
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * BgBuildings
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function BgBuildings(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'buildings', aFrame == undefined || aFrame == null? null : aFrame);
	
	this.myCreate();
	
}

/** @type Phaser.Sprite */
var BgBuildings_proto = Object.create(Phaser.Sprite.prototype);
BgBuildings.prototype = BgBuildings_proto;
BgBuildings.prototype.constructor = BgBuildings;

/* --- end generated code --- */
// -- user code here --
BgBuildings.prototype.myCreate = function () {

this.addNext =  true;

   	this.myTimer = this.game.time.create(false);
    this.myTimer.loop(200, this.timerUpdate, this);
    this.myTimer.start();

};

BgBuildings.prototype.timerUpdate = function () {

	this.x+=1;

		
	if(this.addNext){
	if(this.x>=this.game.width/3){
		
			var _buildings = new BgBuildings(this.game, -this.width, 69.0);
			this.game.state.getCurrentState﻿().fMiddleBG.add(_buildings);
			this.addNext = false;
		}
	
	}
	if(this.x>=1920){
		
		this.destroy();
	}


}

BgBuildings.prototype.update = function () {
this.position.y=-this.game.state.getCurrentState﻿().fPlayer.y/64+30;

};