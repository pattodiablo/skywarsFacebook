
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * shot
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function shot(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'powerUps', aFrame == undefined || aFrame == null? 'Symbol 9 instance 10000' : aFrame);
	this.scale.set(1.0, 0.8);
	this.alpha = 0.7;
	this.anchor.set(0.5, 0.5);
	var _anim_shooting = this.animations.add('shooting', ['Symbol 9 instance 10000', 'Symbol 9 instance 10001', 'Symbol 9 instance 10002', 'Symbol 9 instance 10003', 'Symbol 9 instance 10004'], 30, false);
	_anim_shooting.play();
	this.game.physics.arcade.enable(this);
	this.body.immovable = true;
	this.body.velocity.x = 700.0;
	
	// fields
	
	this.fFireshot = this;
	
	this.myCreate();
	
}

/** @type Phaser.Sprite */
var shot_proto = Object.create(Phaser.Sprite.prototype);
shot.prototype = shot_proto;
shot.prototype.constructor = shot;

/* --- end generated code --- */
// -- user code here --
shot.prototype.myCreate = function() {
	
 
 
	this.myTimer = this.game.time.create(false);
    this.myTimer.loop(200, this.timerUpdate, this);
    this.myTimer.start();
   
    
};

shot.prototype.timerUpdate = function() {

			if(this.world.x<=-200 ){
			
				this.myTimer.destroy();
				this.destroy();			
			}
			if(this.world.x>=2000 ){
				
				this.myTimer.destroy();
				this.destroy();			
			}

}

